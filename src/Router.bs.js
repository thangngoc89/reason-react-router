// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Router");

function make(children) {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function () {
      var match = typeof (window) === "undefined" ? undefined : (window);
      if (match !== undefined) {
        var appLoad = new Event("popstate");
        +match.dispatchEvent(appLoad);
        return /* NoUpdate */0;
      } else {
        return /* NoUpdate */0;
      }
    });
  newrecord[/* render */9] = (function (param) {
      return Curry._1(children, param[/* state */2]);
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* path : [] */0,
              /* hash */"",
              /* search */""
            ];
    });
  newrecord[/* reducer */12] = (function (action, _) {
      return /* Update */Block.__(0, [action[0]]);
    });
  newrecord[/* subscriptions */13] = (function (param) {
      var send = param[/* send */4];
      return /* :: */[
              /* Sub */[
                (function () {
                    return ReasonReact.Router[/* watchUrl */1]((function (url) {
                                  return Curry._1(send, /* UpdateRoute */[url]);
                                }));
                  }),
                ReasonReact.Router[/* unwatchUrl */2]
              ],
              /* [] */0
            ];
    });
  return newrecord;
}

exports.component = component;
exports.make      = make;
/* component Not a pure module */
